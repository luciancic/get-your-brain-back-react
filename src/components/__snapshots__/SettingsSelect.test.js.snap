// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders SettingsSelect 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SettingsSelect
    changeSettings={[MockFunction]}
    name="n"
    options={
      Object {
        "n": Array [
          2,
          3,
          4,
        ],
      }
    }
    settings={
      Object {
        "n": 2,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <select
        defaultValue={2}
        name="n"
        onChange={[Function]}
        style={
          Object {
            "borderColor": "black",
          }
        }
      >
        <option
          value={2}
        >
          2
        </option>
        <option
          value={3}
        >
          3
        </option>
        <option
          value={4}
        >
          4
        </option>
      </select>,
      "className": "input-field",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <option
            value={2}
          >
            2
          </option>,
          <option
            value={3}
          >
            3
          </option>,
          <option
            value={4}
          >
            4
          </option>,
        ],
        "defaultValue": 2,
        "name": "n",
        "onChange": [Function],
        "style": Object {
          "borderColor": "black",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "host",
          "props": Object {
            "children": 2,
            "value": 2,
          },
          "ref": null,
          "rendered": 2,
          "type": "option",
        },
        Object {
          "instance": null,
          "key": "3",
          "nodeType": "host",
          "props": Object {
            "children": 3,
            "value": 3,
          },
          "ref": null,
          "rendered": 3,
          "type": "option",
        },
        Object {
          "instance": null,
          "key": "4",
          "nodeType": "host",
          "props": Object {
            "children": 4,
            "value": 4,
          },
          "ref": null,
          "rendered": 4,
          "type": "option",
        },
      ],
      "type": "select",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <select
          defaultValue={2}
          name="n"
          onChange={[Function]}
          style={
            Object {
              "borderColor": "black",
            }
          }
        >
          <option
            value={2}
          >
            2
          </option>
          <option
            value={3}
          >
            3
          </option>
          <option
            value={4}
          >
            4
          </option>
        </select>,
        "className": "input-field",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <option
              value={2}
            >
              2
            </option>,
            <option
              value={3}
            >
              3
            </option>,
            <option
              value={4}
            >
              4
            </option>,
          ],
          "defaultValue": 2,
          "name": "n",
          "onChange": [Function],
          "style": Object {
            "borderColor": "black",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "host",
            "props": Object {
              "children": 2,
              "value": 2,
            },
            "ref": null,
            "rendered": 2,
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "3",
            "nodeType": "host",
            "props": Object {
              "children": 3,
              "value": 3,
            },
            "ref": null,
            "rendered": 3,
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "4",
            "nodeType": "host",
            "props": Object {
              "children": 4,
              "value": 4,
            },
            "ref": null,
            "rendered": 4,
            "type": "option",
          },
        ],
        "type": "select",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
